Loading required package: haven
Loading required package: lubridate

Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

Loading required package: stringr
Loading required package: ggplot2
Loading required package: dlm

Attaching package: ‘dlm’

The following object is masked from ‘package:ggplot2’:

    %+%

Loading required package: plyr
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: magrittr
Loading required package: broom
Loading required package: tidyr

Attaching package: ‘tidyr’

The following object is masked from ‘package:magrittr’:

    extract

Loading required package: reshape2

Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: readr
Loading required package: rvest

Attaching package: ‘rvest’

The following object is masked from ‘package:readr’:

    guess_encoding

Loading required package: mcmcplots
Loading required package: coda
Loading required package: parallel
Loading required package: rstan
Loading required package: StanHeaders

rstan version 2.32.6 (Stan version 2.32.2)

For execution on a local, multicore CPU with excess RAM we recommend calling
options(mc.cores = parallel::detectCores()).
To avoid recompilation of unchanged Stan programs, we recommend calling
rstan_options(auto_write = TRUE)
For within-chain threading using `reduce_sum()` or `map_rect()` Stan functions,
change `threads_per_chain` option:
rstan_options(threads_per_chain = 1)


Attaching package: ‘rstan’

The following object is masked from ‘package:coda’:

    traceplot

The following object is masked from ‘package:tidyr’:

    extract

The following object is masked from ‘package:magrittr’:

    extract

Loading required package: shinystan
Loading required package: shiny

This is shinystan version 2.6.0

Loading required package: superdiag
Loading required package: xtable
Loading required package: knitr
Loading required package: openxlsx
Loading required package: coalitions
     haven  lubridate    stringr    ggplot2        dlm       plyr      dplyr 
      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE       TRUE 
  magrittr      broom      tidyr    stringr   reshape2      readr      rvest 
      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE       TRUE 
 mcmcplots   parallel      rstan  shinystan  superdiag     xtable      knitr 
      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE       TRUE 
  openxlsx coalitions 
      TRUE       TRUE 
Warning message:
There were 8 warnings in `mutate()`.
The first warning was:
ℹ In argument: `sonstige = (function (x, decimal = TRUE) ...`.
Caused by warning:
! There were 7 warnings in `mutate()`.
The first warning was:
ℹ In argument: `cdu = (function (x, decimal = TRUE) ...`.
Caused by warning:
! NAs introduced by coercion
ℹ Run `dplyr::last_dplyr_warnings()` to see the 6 remaining warnings.
ℹ Run `dplyr::last_dplyr_warnings()` to see the 7 remaining warnings. 
[1] "2024-11-23" "2024-11-25" "2024-11-30" "2024-12-01" "2024-12-03"
[1] "2024-12-03"
There is a new poll. Running the model.

Estimating Model for Election 2025 with a cutoff of 2024-12-04 

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 5).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 6).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 8).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 7).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 9).

SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 10).
Chain 8: 
Chain 8: Gradient evaluation took 0.003236 seconds
Chain 8: 1000 transitions using 10 leapfrog steps per transition would take 32.36 seconds.
Chain 8: Adjust your expectations accordingly!
Chain 8: 
Chain 8: 
Chain 1: 
Chain 1: Gradient evaluation took 0.002679 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 26.79 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 4: 
Chain 4: Gradient evaluation took 0.002379 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 23.79 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 8: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 7: 
Chain 7: Gradient evaluation took 0.00344 seconds
Chain 7: 1000 transitions using 10 leapfrog steps per transition would take 34.4 seconds.
Chain 7: Adjust your expectations accordingly!
Chain 7: 
Chain 7: 
Chain 2: 
Chain 2: Gradient evaluation took 0.0024 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 24 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 6: 
Chain 6: Gradient evaluation took 0.002837 seconds
Chain 6: 1000 transitions using 10 leapfrog steps per transition would take 28.37 seconds.
Chain 6: Adjust your expectations accordingly!
Chain 6: 
Chain 6: 
Chain 7: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 10: 
Chain 10: Gradient evaluation took 0.002888 seconds
Chain 10: 1000 transitions using 10 leapfrog steps per transition would take 28.88 seconds.
Chain 10: Adjust your expectations accordingly!
Chain 10: 
Chain 10: 
Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 9: 
Chain 9: Gradient evaluation took 0.002802 seconds
Chain 9: 1000 transitions using 10 leapfrog steps per transition would take 28.02 seconds.
Chain 9: Adjust your expectations accordingly!
Chain 9: 
Chain 9: 
Chain 5: 
Chain 5: Gradient evaluation took 0.002743 seconds
Chain 5: 1000 transitions using 10 leapfrog steps per transition would take 27.43 seconds.
Chain 5: Adjust your expectations accordingly!
Chain 5: 
Chain 5: 
Chain 3: 
Chain 3: Gradient evaluation took 0.002712 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 27.12 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 6: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 10: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 9: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 5: Iteration:    1 / 2000 [  0%]  (Warmup)
Chain 6: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 10: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 9: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 10: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 8: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 6: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 7: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 9: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 5: Iteration:  200 / 2000 [ 10%]  (Warmup)
Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 8: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 7: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 10: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 9: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 6: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 7: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 5: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 8: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup)
Chain 10: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 9: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 7: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 5: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 8: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup)
Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 10: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 10: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 6: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 9: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 9: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 9: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 9: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 9: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 9: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 9: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 9: 
Chain 9:  Elapsed Time: 5066.96 seconds (Warm-up)
Chain 9:                8.22 seconds (Sampling)
Chain 9:                5075.18 seconds (Total)
Chain 9: 
Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 7: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 7: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 5: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup)
Chain 10: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 8: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 8: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 10: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 7: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 8: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 10: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 7: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 6: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 6: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 8: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 6: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 10: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 7: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 6: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 8: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 6: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 10: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 10: 
Chain 10:  Elapsed Time: 4934.62 seconds (Warm-up)
Chain 10:                2257.74 seconds (Sampling)
Chain 10:                7192.37 seconds (Total)
Chain 10: 
Chain 7: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 6: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 5: Iteration: 1000 / 2000 [ 50%]  (Warmup)
Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 5: Iteration: 1001 / 2000 [ 50%]  (Sampling)
Chain 8: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 6: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 6: 
Chain 6:  Elapsed Time: 6382.99 seconds (Warm-up)
Chain 6:                1217.41 seconds (Sampling)
Chain 6:                7600.4 seconds (Total)
Chain 6: 
Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 1: 
Chain 1:  Elapsed Time: 4901.54 seconds (Warm-up)
Chain 1:                2728.75 seconds (Sampling)
Chain 1:                7630.3 seconds (Total)
Chain 1: 
Chain 7: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 7: 
Chain 7:  Elapsed Time: 5338.29 seconds (Warm-up)
Chain 7:                2421.48 seconds (Sampling)
Chain 7:                7759.76 seconds (Total)
Chain 7: 
Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 8: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 8: 
Chain 8:  Elapsed Time: 5547.2 seconds (Warm-up)
Chain 8:                2447.06 seconds (Sampling)
Chain 8:                7994.26 seconds (Total)
Chain 8: 
Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 4: 
Chain 4:  Elapsed Time: 5607.39 seconds (Warm-up)
Chain 4:                2458.07 seconds (Sampling)
Chain 4:                8065.46 seconds (Total)
Chain 4: 
Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 3: 
Chain 3:  Elapsed Time: 6310.72 seconds (Warm-up)
Chain 3:                2543.37 seconds (Sampling)
Chain 3:                8854.09 seconds (Total)
Chain 3: 
Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 2: 
Chain 2:  Elapsed Time: 6382.62 seconds (Warm-up)
Chain 2:                2491.96 seconds (Sampling)
Chain 2:                8874.58 seconds (Total)
Chain 2: 
Chain 5: Iteration: 1200 / 2000 [ 60%]  (Sampling)
Chain 5: Iteration: 1400 / 2000 [ 70%]  (Sampling)
Chain 5: Iteration: 1600 / 2000 [ 80%]  (Sampling)
Chain 5: Iteration: 1800 / 2000 [ 90%]  (Sampling)
Chain 5: Iteration: 2000 / 2000 [100%]  (Sampling)
Chain 5: 
Chain 5:  Elapsed Time: 7388.55 seconds (Warm-up)
Chain 5:                13232 seconds (Sampling)
Chain 5:                20620.5 seconds (Total)
Chain 5: 
     haven  lubridate    stringr    ggplot2        dlm       plyr      dplyr 
      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE       TRUE 
  magrittr      broom      tidyr    stringr   reshape2      readr      rvest 
      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE       TRUE 
 mcmcplots   parallel      rstan  shinystan  superdiag     xtable      knitr 
      TRUE       TRUE       TRUE       TRUE       TRUE       TRUE       TRUE 
  openxlsx coalitions 
      TRUE       TRUE 
Warning messages:
1: In readLines(file, warn = TRUE) :
  incomplete final line found on '/home/cerfort/prediction-2025/model_code/combined_model_simple.stan'
2: There were 1328 divergent transitions after warmup. See
https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
to find out why this is a problem and how to eliminate them. 
3: There were 8 transitions after warmup that exceeded the maximum treedepth. Increase max_treedepth above 15. See
https://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded 
4: There were 9 chains where the estimated Bayesian Fraction of Missing Information was low. See
https://mc-stan.org/misc/warnings.html#bfmi-low 
5: Examine the pairs() plot to diagnose sampling problems
 
6: The largest R-hat is NA, indicating chains have not mixed.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#r-hat 
7: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#bulk-ess 
8: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.
Running the chains for more iterations may help. See
https://mc-stan.org/misc/warnings.html#tail-ess 
